{"version":3,"sources":["file:///Users/a1/templateProject/assets/effects/light/light.ts"],"names":["_decorator","Component","Node","Sprite","Vec4","Camera","Material","ccclass","property","executeInEditMode","Light","onLoad","start","updateLight","update","getwpos","node2d","worldPosition","updateBody","target","lightPos","spr","getComponent","getSharedMaterial","setProperty","x","y","z","node","idx","bodys_normal","bodys"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAA8CC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAcC,MAAAA,Q,OAAAA,Q;;;;;;;;;OAElG;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,O,GAA2CT,U;;uBAIpCU,K,WAFZH,OAAO,CAAC,OAAD,C,UAGHC,QAAQ,CAAC,CAACN,IAAD,CAAD,C,UAGRM,QAAQ,CAAC,CAACN,IAAD,CAAD,C,UAGRM,QAAQ,CAACH,MAAD,C,UAGRG,QAAQ,CAACF,QAAD,C,UAGRE,QAAQ,CAACF,QAAD,C,gBAdZG,iB,qBADD,MAEaC,KAFb,SAE2BT,SAF3B,CAEqC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAgBjCU,QAAAA,MAAM,GAAG;AACL;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEK;;AAEDC,QAAAA,KAAK,GAAG;AACJ,eAAKC,WAAL;AACH;;AAEDC,QAAAA,MAAM,GAAG;AACL,eAAKD,WAAL;AACH;;AAEDE,QAAAA,OAAO,CAACC,MAAD,EAAe;AAClB;AACA;AACA;AAEA,iBAAOA,MAAM,CAACC,aAAd;AACH;;AAEDC,QAAAA,UAAU,CAACC,MAAD,EAASC,QAAT,EAAmB;AACzB;AACA,cAAIC,GAAG,GAAGF,MAAM,CAACG,YAAP,CAAoBnB,MAApB,CAAV,CAFyB,CAIzB;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AACAkB,UAAAA,GAAG,CAACE,iBAAJ,CAAsB,CAAtB,EAAyBC,WAAzB,CAAqC,gBAArC,EAAuD,IAAIpB,IAAJ,CAASgB,QAAQ,CAACK,CAAlB,EAAqBL,QAAQ,CAACM,CAA9B,EAAiCN,QAAQ,CAACO,CAA1C,EAA6C,CAA7C,CAAvD;AACH;;AAEDd,QAAAA,WAAW,GAAG;AACV;AACA,cAAIO,QAAQ,GAAG,KAAKL,OAAL,CAAa,KAAKa,IAAlB,CAAf;;AAEA,eAAK,IAAIC,GAAT,IAAgB,KAAKC,YAArB,EAAmC;AAC/B,gBAAIF,IAAI,GAAG,KAAKE,YAAL,CAAkBD,GAAlB,CAAX;AACA,gBAAI,QAAQD,IAAZ,EAAkB;AAClB,iBAAKV,UAAL,CAAgBU,IAAhB,EAAsBR,QAAtB;AACH;;AAED,eAAK,IAAIS,GAAT,IAAgB,KAAKE,KAArB,EAA4B;AACxB,gBAAIH,KAAI,GAAG,KAAKG,KAAL,CAAWF,GAAX,CAAX;AACA,gBAAI,QAAQD,KAAZ,EAAkB;AAClB,iBAAKV,UAAL,CAAgBU,KAAhB,EAAsBR,QAAtB;AACH;AACJ;;AAlFgC,O;;;;;iBAEV,E;;;;;;;iBAGP,E;;;;;;;iBAGF,I;;;;;;;iBAGE,I;;;;;;;iBAGO,I","sourcesContent":["\nimport { _decorator, Component, Node, Sprite, math, UITransform, Label, Vec2, Vec3, Vec4, Camera, view, Material, Texture2D, renderer, color, Color } from 'cc';\nimport { EDITOR } from 'cc/env';\nconst { ccclass, property, executeInEditMode } = _decorator;\n\n@ccclass('Light')\n@executeInEditMode\nexport class Light extends Component {\n    @property([Node])\n    bodys_normal: Node[] = [];\n\n    @property([Node])\n    bodys: Node[] = [];\n\n    @property(Camera)\n    cam: Camera = null!;\n\n    @property(Material)\n    eff: Material = null!;\n\n    @property(Material)\n    eff_normal: Material = null!;\n\n    onLoad() {\n        /*\n        // 非法线贴图物体\n        var mat = new Material;\n        mat.copy(this.eff);\n        this.bodys.forEach(spr => {\n            spr.getComponent(Sprite).customMaterial = mat;\n        })\n\n        // 法线贴图物体\n        var mat = new Material;\n        mat.copy(this.eff_normal);\n        this.bodys_normal.forEach(spr => {\n            spr.getComponent(Sprite).customMaterial = mat;\n        })\n        */\n    }\n\n    start() {\n        this.updateLight();\n    }\n\n    update() {\n        this.updateLight();\n    }\n\n    getwpos(node2d: Node) {\n        //let _pos = new Vec3(node2d.worldPosition.x, node2d.worldPosition.y, node2d.worldPosition.z);        \n        // @ts-ignore\n        //let _wpos = _pos.transformMat4(this.cam._camera._matViewProj);\n\n        return node2d.worldPosition;\n    }\n\n    updateBody(target, lightPos) {\n        // 更新uniform\n        let spr = target.getComponent(Sprite);\n\n        // 环境光\n        // spr.getMaterial(0).setProperty('light_ambientColor', new Color(0, 0, 0, 256));\n\n        // 亮度\n        //spr.getMaterial(0).setProperty('light_brightness', 1);\n\n        // 光照半径\n        //spr.getMaterial(0).setProperty('light_radius', 15);\n\n        // 灯光位置\n        spr.getSharedMaterial(0).setProperty('light_worldpos', new Vec4(lightPos.x, lightPos.y, lightPos.z, 1));\n    }\n\n    updateLight() {\n        // 光源位置\n        let lightPos = this.getwpos(this.node)\n\n        for (var idx in this.bodys_normal) {\n            let node = this.bodys_normal[idx];\n            if (null == node) return;\n            this.updateBody(node, lightPos);\n        }\n\n        for (var idx in this.bodys) {\n            let node = this.bodys[idx];\n            if (null == node) return;\n            this.updateBody(node, lightPos);\n        }\n    }\n}\n"]}
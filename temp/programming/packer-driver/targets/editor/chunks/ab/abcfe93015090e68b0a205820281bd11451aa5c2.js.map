{"version":3,"sources":["file:///Users/a1/templateProject/assets/scripts/DemoFunc.ts"],"names":["_decorator","Component","math","Prefab","GuestureManger","PollManager","ccclass","property","DemoFunc","guest","start","node","schedule","getNode","pre","setWorldPosition","v3","random","onTap","bind","event","arr","children","length","i","setNode","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAuBC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,M,OAAAA,M;;AAC/CC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;0BAGjBQ,Q,WADZF,OAAO,CAAC,UAAD,C,UAGHC,QAAQ,CAACJ,MAAD,C,2BAHb,MACaK,QADb,SAC8BP,SAD9B,CACwC;AAAA;AAAA;AAAA,eAC5BQ,KAD4B;;AAAA;AAAA;;AAIpCC,QAAAA,KAAK,GAAG;AACP,eAAKD,KAAL,GAAa;AAAA;AAAA,gDAAmB,KAAKE,IAAxB,CAAb;AACD,eAAKC,QAAL,CAAc,MAAI;AAChB,kBAAMD,IAAI,GAAI;AAAA;AAAA,4CAAYE,OAAZ,CAAoB,KAAKC,GAAzB,EAA6B,KAAKH,IAAlC,CAAd;AACAA,YAAAA,IAAI,CAACI,gBAAL,CAAsBb,IAAI,CAACc,EAAL,CAAQd,IAAI,CAACe,MAAL,KAAc,GAAtB,EAA0Bf,IAAI,CAACe,MAAL,KAAc,IAAxC,EAA6C,CAA7C,CAAtB;AACD,WAHD,EAGE,CAHF,EAGI,GAHJ;AAIC,eAAKR,KAAL,CAAWS,KAAX,GAAmB,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAnB;AACA;;AAIDD,QAAAA,KAAK,CAACE,KAAD,EAAkB;AACnB;AACA,gBAAMC,GAAG,GAAG,KAAKV,IAAL,CAAUW,QAAtB;;AACR,cAAGD,GAAG,IAAE,IAAL,IAAaA,GAAG,CAACE,MAAJ,IAAY,CAA5B,EAA8B;AAC5B;AACD;;AACO,eAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACH,GAAG,CAACE,MAArB,EAA6BC,CAAC,EAA9B,EAAiC;AACjC;AAAA;AAAA,4CAAYC,OAAZ,CAAoBJ,GAAG,CAACG,CAAD,CAAvB;AACD;AACF;;AACDE,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA3BmC,O;;;;;iBAGvB,I","sourcesContent":["import { _decorator, Component, EventTouch, math, Node, Prefab, Vec2 } from 'cc';\nimport { GuestureManger } from './gesture/GuestureManger';\nimport { PollManager } from './PollManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('DemoFunc')\nexport class DemoFunc extends Component {\n    private guest:GuestureManger\n    @property(Prefab)\n    pre:Prefab = null\n    start() {\n     this.guest = new GuestureManger(this.node)\n    this.schedule(()=>{\n      const node =  PollManager.getNode(this.pre,this.node)\n      node.setWorldPosition(math.v3(math.random()*720,math.random()*1280,1))\n    },3,100)\n     this.guest.onTap = this.onTap.bind(this)\n    }\n  \n  \n   \n    onTap(event:EventTouch){\n        //console.log('swipe:'+direction)\n        const arr = this.node.children\nif(arr==null || arr.length<=0){\n  return\n}\n        for(let i = 0 ;i<arr.length; i++){\n        PollManager.setNode(arr[i])\n      }\n    }\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}
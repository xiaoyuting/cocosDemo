{"version":3,"sources":["file:///Users/a1/templateProject/assets/scripts/PollManager.ts"],"names":["_decorator","instantiate","ccclass","property","PollManager","getNode","prefab","parent","name","console","log","node","handle","has","get","pop","setParent","setNode","target","push","set","Map"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAuBC,MAAAA,W,OAAAA,W;;;;;;;;;OAC1B;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;6BAGjBI,W,WADZF,OAAO,CAAC,aAAD,C,2BAAR,MACaE,WADb,CAC0B;AAEtB;AACJ;AACA;AACA;AACA;AACA;AACyB,eAAPC,OAAO,CAACC,MAAD,EAAeC,MAAf,EAA2B;AAC5C,gBAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,cAAIC,IAAS,GAAG,IAAhB;;AACA,cAAG,KAAKC,MAAL,CAAYC,GAAZ,CAAgBL,IAAhB,CAAH,EAAyB;AACrBG,YAAAA,IAAI,GAAG,KAAKC,MAAL,CAAYE,GAAZ,CAAgBN,IAAhB,EAAsBO,GAAtB,EAAP;AACH,WAFD,MAEM;AACFJ,YAAAA,IAAI,GAAGV,WAAW,CAACK,MAAD,CAAlB;AACH;;AACDK,UAAAA,IAAI,CAACK,SAAL,CAAeT,MAAf;AACA,iBAAOI,IAAP;AACH;AAAA;AACL;AACA;AACA;;;AACyB,eAAPM,OAAO,CAACC,MAAD,EAAa;AAC9B,gBAAMV,IAAI,GAAGU,MAAM,CAACV,IAApB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAQ,UAAAA,MAAM,CAACX,MAAP,GAAgB,IAAhB;;AACA,cAAG,KAAKK,MAAL,CAAYC,GAAZ,CAAgBL,IAAhB,CAAH,EAAyB;AACvB,iBAAKI,MAAL,CAAYE,GAAZ,CAAgBN,IAAhB,EAAsBW,IAAtB,CAA2BD,MAA3B;AACD,WAFD,MAEK;AACH,iBAAKN,MAAL,CAAYQ,GAAZ,CAAgBZ,IAAhB,EAAqB,CAACU,MAAD,CAArB;AACD;AACJ;;AAhCqB,O,UACRN,M,GAAS,IAAIS,GAAJ,E","sourcesContent":["import { _decorator, Component, instantiate, Node, Prefab, UIDrawBatch } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('PollManager')\nexport class PollManager  {\n    public static handle = new Map<string,Node[]>()\n    /**\n     * \n     * @param prefab \n     * @param parent \n     * @returns \n     */\n    public static getNode(prefab:Prefab,parent:Node){\n        const name = prefab.name\n        console.log(\"get\")\n        let node:Node = null\n        if(this.handle.has(name)){\n            node = this.handle.get(name).pop()\n        } else{\n            node = instantiate(prefab) as Node\n        }\n        node.setParent(parent)\n        return node\n    }/**\n     * \n     * @param target \n     */\n    public static setNode(target:Node){\n        const name = target.name\n        console.log(\"set\")\n        target.parent = null\n        if(this.handle.has(name)){\n          this.handle.get(name).push(target)\n        }else{\n          this.handle.set(name,[target])\n        }\n    }\n\n\n\n}\n\n"]}
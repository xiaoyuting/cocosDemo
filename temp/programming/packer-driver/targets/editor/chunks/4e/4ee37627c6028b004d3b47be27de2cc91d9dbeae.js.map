{"version":3,"sources":["file:///Users/a1/templateProject/assets/scripts/gesture/GuestureManger.ts"],"names":["_decorator","Input","Vec2","ccclass","property","GuestureManger","constructor","target","touchStartTime","lastTouchEndTime","touchStartPos","lastTapPos","doubleTapTimeout","longPressTimeout","touchMoveThreshold","isLongPress","initialDistance","initialAngle","isMove","initEventListenters","on","EventType","TOUCH_START","onThouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","onTouchCancel","event","touches","getTouches","Date","now","set","getLocation","console","log","getUILocation","getLocationInView","length","touch1","touch2","getDistance","getAngle","setTimeout","onLongPress","currentDistance","currentAngle","onPinch","onMove","touchEndTime","touchEndPos","timeDiff","equals","onDoubleTag","onTap","subtract","onSwipe","direction","scale","onRotate","angle","dx","getLocationX","dy","getLocationY","a","Math","sqrt","point1","point2","distance","atan2","PI"],"mappings":"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","sourcesContent":["import { _decorator, Component, Event, EventTouch, Input, Node, Vec2,Touch } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GuestureManger')\nexport class GuestureManger  {\n    private target:Node\n    private touchStartTime:number = 0\n    private lastTouchEndTime:number = 0\n    private touchStartPos:Vec2 =new Vec2()\n    private lastTapPos:Vec2 = new Vec2()\n    private doubleTapTimeout:number = 300\n    private longPressTimeout:number = 1000\n    private touchMoveThreshold:number  = 10\n    private isLongPress:boolean = false\n    private initialDistance:number = 0\n    private initialAngle:number = 0\n    private isMove:boolean = false\n    constructor(target:Node){\n        this.target =target\n        this.initEventListenters()\n    }\n\n    private initEventListenters(){\n        this.target.on(Input.EventType.TOUCH_START,this.onThouchStart,this)\n        this.target.on(Input.EventType.TOUCH_MOVE,this.onTouchMove,this)\n        this.target.on(Input.EventType.TOUCH_END,this.onTouchEnd,this)\n        this.target.on(Input.EventType.TOUCH_CANCEL,this.onTouchCancel,this)\n    }\n    private onThouchStart(event:EventTouch){\n        const touches = event.getTouches()\n        this.touchStartTime = Date.now()\n        this.touchStartPos.set(event.getLocation())\n        console.log('getLocation:'+event.getLocation())\n        console.log('getUILocation:'+event.getUILocation())\n       console.log( 'etLocationInView:'+event.getLocationInView())\n        this.isLongPress = false\n        this.isMove = true\n        if(touches.length === 2){\n            const touch1 = touches[0]\n            const touch2 = touches[1]\n            this.initialDistance = this.getDistance(touch1,touch2)\n            this.initialAngle = this.getAngle(touch1,touch2)\n        }\n        setTimeout(()=>{\n            if(!this.isLongPress && Date.now() -this.touchStartTime >= this.longPressTimeout){\n             this.isLongPress = true\n             this.onLongPress(event)   \n            }\n        },this.longPressTimeout)\n\n    }\n    private onTouchMove(event:EventTouch){\n        const touches = event.getTouches()\n        if(touches.length === 2){\n            const touch1 = touches[0]\n            const touch2 = touches[1]\n            const currentDistance = this.getDistance(touch1,touch2)\n            const currentAngle = this.getAngle(touch1,touch2)\n            this.onPinch(currentDistance/this.initialDistance)\n            this.initialDistance = currentDistance\n            this.initialAngle = currentAngle\n        }\n        if(this.isMove){\n            this.onMove(event.getUILocation())\n        }\n    }\n    private onTouchEnd(event:EventTouch){\n        const touchEndTime = Date.now()\n        const touchEndPos = event.getLocation()\n        const timeDiff  = touchEndTime - this.touchStartTime\n        if(this.isLongPress){\n         return\n        }\n        if(timeDiff <this.longPressTimeout && this.touchStartPos.equals(touchEndPos)){\n            if(touchEndTime - this.lastTouchEndTime < this.doubleTapTimeout && this.lastTapPos.equals(touchEndPos)){\n              this.onDoubleTag(event)\n              this.lastTouchEndTime = 0\n            }else{\n              this.onTap(event)\n              this.lastTapPos.set(touchEndPos)\n              this.lastTouchEndTime =touchEndTime\n            }\n        }else if(this.touchStartPos.subtract(touchEndPos).length()>this.touchMoveThreshold){\n             this.onSwipe(event,this.touchStartPos.subtract(touchEndPos))\n        }\n    }\n    private onTouchCancel(event:EventTouch){\n      this.isLongPress = false\n    }\n    onTap(event:EventTouch){\n        //console.log('Tap')\n    }\n    onDoubleTag(event:EventTouch){\n       // console.log('doubleTap')\n    }\n    onLongPress(event:EventTouch){\n       // console.log('longPress')\n    }\n    onSwipe(event:EventTouch,direction:Vec2){\n        //console.log('swipe:'+direction)\n    }\n    onPinch(scale:number){\n       // console.log('scale:' + scale)\n    }\n    onRotate(angle:number){\n        //console.log('angle')\n    }\n    onMove(direction:Vec2){\n\n    }\n    private getDistance(touch1:Touch,touch2:Touch):number{\n        const dx = touch2.getLocationX() - touch1.getLocationX()\n        const dy = touch2.getLocationY() - touch1.getLocationY()\n        let a = Math.sqrt(dx*dx + dy*dy)\n        let  point1 = touch2.getLocation()\n        let point2 = touch1.getLocation()\n        let distance = point1.subtract(point2).length()\n\n        console.log('distance==='+a)\n        console.log('distance==='+distance)\n        return Math.sqrt(dx*dx + dy*dy)\n    }\n    private getAngle(touch1:Touch,touch2:Touch):number{\n        const  dx = touch2.getLocationX() - touch1.getLocationX()\n        const  dy = touch2.getLocationY() - touch1.getLocationY()\n        return Math.atan2(dy,dx)*180/Math.PI\n    }\n}\n\n"]}
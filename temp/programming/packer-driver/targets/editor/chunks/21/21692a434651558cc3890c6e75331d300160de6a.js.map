{"version":3,"sources":["file:///Users/a1/templateProject/assets/scripts/EventManager.ts"],"names":["EventManager","emit","eventName","args","list","handle","length","i","event","func","apply","target","on","callback","data","push","off","splice"],"mappings":";;;iBAUaA,Y;;;;;;;;;;;;;8BAAAA,Y,GAAN,MAAMA,YAAN,CAAoB;AAIvB;AACJ;AACA;AACA;AACA;AACsB,eAAJC,IAAI,CAACC,SAAD,EAAkB,GAAGC,IAArB,EAA8B;AAC5C,gBAAMC,IAAI,GAAG,KAAKC,MAAL,CAAYH,SAAZ,CAAb;;AACA,cAAI,CAACE,IAAD,IAASA,IAAI,CAACE,MAAL,IAAe,CAA5B,EAA+B;AAC7B;AACD;;AACD,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAeA,CAAC,GAAGH,IAAI,CAACE,MAAxB,EAAgCC,CAAC,EAAjC,EAAqC;AACjC,kBAAMC,KAAK,GAAIJ,IAAI,CAACG,CAAD,CAAnB;AACAC,YAAAA,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiBF,KAAK,CAACG,MAAvB,EAA8BR,IAA9B;AACH;AACJ;AACF;AACH;AACA;AACA;AACA;AACA;;;AACoB,eAAFS,EAAE,CAACV,SAAD,EAAkBW,QAAlB,EAAoCF,MAApC,EAAgD;AAC5D,cAAG,CAAC,KAAKN,MAAL,CAAYH,SAAZ,CAAJ,EAA2B;AACvB,iBAAKG,MAAL,CAAYH,SAAZ,IAAyB,EAAzB;AACH;;AACD,gBAAMY,IAAgB,GAAG;AAACL,YAAAA,IAAI,EAACI,QAAN;AAAeF,YAAAA,MAAM,EAACA;AAAtB,WAAzB;AACA,eAAKN,MAAL,CAAYH,SAAZ,EAAuBa,IAAvB,CAA4BD,IAA5B;AACH;AACH;AACF;AACA;AACA;AACA;AACA;;;AACoB,eAAHE,GAAG,CAACd,SAAD,EAAkBW,QAAlB,EAAoCF,MAApC,EAAgD;AAChE,gBAAMP,IAAI,GAAI,KAAKC,MAAL,CAAYH,SAAZ,CAAd;;AACA,cAAG,CAACE,IAAD,IAASA,IAAI,CAACE,MAAL,IAAe,CAA3B,EAA6B;AACzB;AACH;;AACD,eAAI,IAAIC,CAAC,GAAI,CAAb,EAAeA,CAAC,GAAGH,IAAI,CAACE,MAAxB,EAAiCC,CAAC,EAAlC,EAAqC;AACjC,kBAAMC,KAAK,GAAIJ,IAAI,CAACG,CAAD,CAAnB;;AACJ,gBAAGC,KAAK,CAACC,IAAN,KAAeI,QAAf,KAA4B,CAACF,MAAD,IAAWA,MAAM,KAAKH,KAAK,CAACG,MAAxD,CAAH,EAAmE;AAC/DP,cAAAA,IAAI,CAACa,MAAL,CAAYV,CAAZ,EAAc,CAAd;AACA;AACH;AAEA;AAED;;AApDuB,O;;AAAdP,MAAAA,Y,CACKK,M,GAAiB,E","sourcesContent":[" \n\n interface IEventData{\n    func:Function\n    target:any\n }\n\n interface IEvent{\n    [ecentName:string]:IEventData[]\n }\nexport class EventManager  {\n    public static handle :IEvent = {}\n\n\n    /**\n     * 发送事件\n     * @param eventName 事件名称\n     * @param args 参数列表\n     */\n    public static emit(eventName:string,...args:any){\n        const list = this.handle[eventName]\n        if( !list || list.length <= 0 ){\n          return\n        }\n        for (let i = 0;i < list.length ;i++ ){\n            const event  = list[i]\n            event.func.apply(event.target,args)\n        }\n    }\n   /**\n    * 注册该事件一个回调函数\n    * eventName 事件名称\n    * callback  回调函数\n    * target  调用对象\n    */\n    public static on(eventName:string,callback:Function,target?:any){\n        if(!this.handle[eventName]){\n            this.handle[eventName] = []\n        }\n        const data :IEventData = {func:callback,target:target}\n        this.handle[eventName].push(data)\n    }\n  /**\n   *注销该事件上的指定回调函数\n   * eventName 事件名称\n   * callback  回调函数\n   * target    调用函数\n   */\n   public static off(eventName:string,callback:Function,target?:any){\n    const list  = this.handle[eventName]\n    if(!list || list.length <= 0){\n        return\n    }\n    for(let i  = 0;i < list.length ; i++){\n        const event  = list[i]\n    if(event.func === callback && (!target || target === event.target)){\n        list.splice(i,1)\n        break\n    }\n\n    }\n\n   }\n}\n\n"]}